name: CI

on:
  push:
    branches:
      - "**" #double star includes a '/'.  single star doesnt match a '/'
     

    tags:
      - "**" #double star includes a '/'.  single star doesnt match a '/'
  schedule:
    # Daily at 05:44
    - cron: '44 5 * * *'

defaults:
  run:
    shell: bash

env:
  PYTHON_VERSION: 3.8
  AWS_REGION: us-east-2

jobs:
  build:
    name: CI
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Install Poetry and Venv
        run: |
          #install Poetry
          python3 -m ensurepip
          python3 -m pip install --upgrade pip
          python3 -m pip install poetry==1.5.1
          poetry --version

          poetry config virtualenvs.in-project true
          poetry config virtualenvs.path .

          #Setup AWS Connection
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain epc-power-us --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text`
          poetry config repositories.epc-power https://epc-power-us-${{ secrets.AWS_ACCOUNT_ID }}.d.codeartifact.us-east-2.amazonaws.com/pypi/epc-power/
          poetry config http-basic.epc-power aws $CODEARTIFACT_AUTH_TOKEN
          poetry config repositories.third-party https://epc-power-us-${{ secrets.AWS_ACCOUNT_ID }}.d.codeartifact.us-east-2.amazonaws.com/pypi/third-party/
          poetry config http-basic.third-party aws $CODEARTIFACT_AUTH_TOKEN

          poetry install
      - name: python commands
        run: |
          set -vx
          poetry run black --check --diff .
          poetry run builduipm
          poetry run builduiepyqlib
          poetry version $(git describe --tags --abbrev=0 2>/dev/null)

          poetry run pip freeze --all
          poetry run genbuildinfo "src/epcpm/__build.py"
          poetry run generateversion --distribution epcpm --out "src/epcpm/__version.py"

          poetry run pyinstaller pyinstaller.spec
          mv "dist/epcpm" "EPCPM_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
          7z a "EPCPM_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}.zip" "EPCPM_${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"

          mkdir artifacts
          mv *.zip artifacts/

          rm -rf dist
          poetry build

          cp dist/* artifacts/
          poetry run pytest epcpm.tests --pyargs
      - name: Publish executable
        #only run if a new tag is created
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          poetry publish --repository epc-power
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pm
          path: |
            artifacts/*
